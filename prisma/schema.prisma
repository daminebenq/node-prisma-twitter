// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String          @id @default(uuid())
  email         String          @unique
  name          String
  username      String          @unique
  password      String
  tweets        Tweet[]
  likedTweets   TweetLikes[]
  following     UserFollows[]   @relation("UserFollowsUser")
  followers     UserFollows[]   @relation("UserFollowsTarget")
  notifications Notifications[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("users")
}

model Tweet {
  id           String       @id @default(uuid())
  from         User         @relation(fields: [userId], references: [id])
  userId       String
  content      String
  responseFrom Tweet?       @relation("TweetComments", fields: [parentId], references: [id])
  comments     Tweet[]      @relation("TweetComments")
  parentId     String?
  likes        TweetLikes[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("tweets")
}

model UserFollows {
  id       String @id @default(uuid())
  user     User   @relation("UserFollowsUser", fields: [userId], references: [id])
  userId   String
  target   User   @relation("UserFollowsTarget", fields: [targetId], references: [id])
  targetId String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("user_follows")
}

model TweetLikes {
  id      String @id @default(uuid())
  tweet   Tweet  @relation(fields: [tweetId], references: [id])
  user    User   @relation(fields: [userId], references: [id])
  tweetId String
  userId  String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("tweet_likes")
}

model Notifications {
  id      String @id @default(uuid())
  content String
  user    User   @relation(fields: [userId], references: [id])
  userId  String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("notifications")
}
